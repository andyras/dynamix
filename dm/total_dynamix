#!/bin/bash

# Function for formatted echo

function fecho {
 timespec=--iso-8601=sec
 echo "### $(date ${timespec}) ${1}"
}

## INPUT PARAMETERS ##
. ./ins/parameters.in

function compile {
## COMPILE ##
 fecho "compiling dynamix.cpp..."
 CPP=g++
 # check if better compilers are installed
 which g++-4.7.0 &> /dev/null
 if [ $? == 0 ] ; then CPP=g++-4.7.0 ; fi
 which g++-4.7.1 &> /dev/null
 if [ $? == 0 ] ; then CPP=g++-4.7.1 ; fi
 which g++-4.7.2 &> /dev/null
 if [ $? == 0 ] ; then CPP=g++-4.7.2 ; fi
 which icpc &> /dev/null
 if [ $? == 0 ] ; then CPP=icpc ; fi
 cd build
 make -j 12 CPP=$CPP
 if [ $? == 0 ] ; then
  fecho "done compiling!" && make install
  cd ..
 else
  fecho "failed to compile :("
  exit
 fi
}

function run {
## RUN THE PROGRAM! ##
 module load intel
 module load cvode/2.7.0
 fecho "running dynamix..."
 ./bin/dynamix
 if [ $? == 0 ] ; then
  fecho "dynamix done!"
 else
  fecho "dynamix did not run :("
  exit
 fi
 # move outputs
 [ -d outs ] && rm -rf outs
 mkdir -p outs
 mv *.out outs/
 # move plot files
 [ -d figures ] && rm -rf figures
 mkdir -p figures
 chmod 755 *.plt
 mv *.plt figures/
 # remove progress file
 rm -f progress.tmp
}

function backup {
## BACK UP FILES ##
 fecho "backing things up..."
 durr=backup/dynamix_$(date --iso-8601=sec)
 mkdir -p $durr
 cp -rf * $durr &> /dev/null
 fecho "all backed up!"
}

function plot {
 if [ -d figures ]; then
  for plotfile in $(ls figures/*plt)
  do
   fecho "plotting ${plotfile}..."
   ./$plotfile
  done
 else
  fecho "Nothing to plot."
 fi
}

### This is where the script actually starts doing things. ###

fecho "dynamix run starting now..."
fecho ""
fecho ""

[ $do_compile == 1 ] && compile
[ $do_run == 1 ] && run
[ $do_plot == 1 ] && plot
[ $do_backup == 1 ] && backup

fecho "all done!"
fecho ""
fecho ""
