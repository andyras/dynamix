#!/bin/bash
#$ -S /bin/bash
#$ -cwd
#$ -V

# set up the proper environment variables for a PBS job.
#PBS -V
#PBS -o stdout.log
#PBS -e stderr.log
##PBS -o /dev/null
##PBS -e /dev/null
#PBS -l mem=5gb

if [ ${HOSTNAME} == "tim.selfip.org" ]; then
 # go to directory from which job was submitted.  If this job is being run
 # (not submitted to a queue) this should not run.
 if [ ! -z ${PBS_O_WORKDIR} ]; then
  echo "going to PBS working directory: ${PBS_O_WORKDIR}"
  cd ${PBS_O_WORKDIR}
 fi
fi

## INPUT PARAMETERS ##
. ./ins/parameters.in

function compile {
## COMPILE ##
 echo "### $(date) compiling dynamix.cpp..."
 CPP=g++
 # check if better compilers are installed
 which g++-4.7.0 &> /dev/null
 if [ $? == 0 ] ; then CPP=g++-4.7.0 ; fi
 which g++-4.7.1 &> /dev/null
 if [ $? == 0 ] ; then CPP=g++-4.7.1 ; fi
 which g++-4.7.2 &> /dev/null
 if [ $? == 0 ] ; then CPP=g++-4.7.2 ; fi
 which icpc &> /dev/null
 if [ $? == 0 ] ; then CPP=icpc ; fi
 cd build
 make -j 12 CPP=$CPP
 if [ $? == 0 ] ; then
  echo "### $(date) done compiling!" && make install
  cd ..
 else
  echo "### $(date) failed to compile :("
  exit
 fi
}

function run {
## RUN THE PROGRAM! ##
 module load intel
 module load cvode/2.7.0
 echo "### $(date) running dynamix..."
 ./bin/dynamix
 if [ $? == 0 ] ; then
  echo "### $(date) dynamix done!"
 else
  echo "### $(date) dynamix did not run :("
  exit
 fi
 # move outputs
 [ -d outs ] && rm -rf outs
 mkdir -p outs
 mv *.out outs/
 # move plot files
 [ -d figures ] && rm -rf figures
 mkdir -p figures
 chmod 755 *.plt
 mv *.plt figures/
}

function backup {
## BACK UP FILES ##
 echo "### $(date) backing things up..."
 durr=backup/dynamix_$(date +%F.%H.%M.%S)
 mkdir -p $durr
 cp -rf ins/ outs/ bin/ figures/ doc/ total_dynamix $durr
 [ $do_plot == 1 ] && cp *.eps $durr
 [ $do_movie == 1 ] && cp bulk_states.avi $durr
 [ $(($Nb)) == 0 ] && rm -f $durr/outs/tbprob.out $durr/outs/Ibprob.out $durr/outs/bmax.out && ls $durr
 echo "### $(date) all backed up\!"
}

### This is where the script actually starts doing things. ###

echo "### $(date) dynamix run starting now..."
echo "###"
echo "###"

[ $do_compile == 1 ] && compile
[ $do_run == 1 ] && run
[ $do_backup == 1 ] && backup

echo "### $(date) all done!"
echo "###"
echo "###"
